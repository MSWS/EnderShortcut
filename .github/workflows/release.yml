name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'

      - name: Build JAR
        run: mvn package

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: git config --global user.name "GitHub Actions" && git config --global user.email "actions@github.com"

      - name: Get current tag
        id: get_current_tag
        run: echo ::set-output name=tag::$(git describe --tags --abbrev=0 --exact-match HEAD || echo "")

      - name: Check if release already exists
        id: check_release
        run: |
          release_exists=$(curl -s -o /dev/null -w "%{http_code}" -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.get_current_tag.outputs.tag }}")
          if [ $release_exists -eq 200 ]; then
            echo "Release already exists"
            echo ::set-output name=exists::true
          else
            echo "Release does not exist"
            echo ::set-output name=exists::false
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: steps.check_release.outputs.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_current_tag.outputs.tag }}
          release_name: Release ${{ steps.get_current_tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload JAR
        uses: actions/upload-artifact@v2
        if: steps.check_release.outputs.exists == 'false'
        with:
          name: jar
          path: target/EnderShortcut*.jar
